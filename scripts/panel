#!/bin/bash

source ~/.config/global.conf

monitors="`bspc query --monitors | wc -l`"

TOGGLE_FILE='/tmp/toggle_panel'
if [ ! -e "$TOGGLE_FILE" ] ; then
    echo -n 0 > $TOGGLE_FILE
fi

function statusbar {

    if [[ $(< $TOGGLE_FILE) -eq 1 ]] ; then
        TOGGLE=true
        TOGGLE_ICON="-"
    else
        TOGGLE=false
        TOGGLE_ICON="+"
    fi

    batt() {
        batt_status=$(battery | awk -F' ' '{print $1}')
        batt_level=$(battery | awk -F' ' '{print $2}')

        if "$TOGGLE" ; then
            if [ $batt_status == 'Charging'  ] && [ $batt_level -gt 98 ] ; then
                echo "%{F$BLUE} $batt_level%%%{F-}"
            elif [ $batt_status == 'Charging' ] ; then
                echo "%{F$BLUE} $batt_level%%%{F-}"
            elif [ $batt_level -le 10 ] ; then
                echo "%{F$RED} $batt_level%%%{F-}"
            elif [ $batt_level -lt 50 ] ; then
                echo "%{F$BLUE} $batt_level%%%{F-}"
            elif [ $batt_level -le 100 ] ; then
                echo "%{F$BLUE} $batt_level%%%{F-}"
            fi
        else
            if [ $batt_status == 'Charging'  ] && [ $batt_level -gt 98 ] ; then
                echo "%{F$BLUE}%{F-}"
            elif [ $batt_status == 'Charging' ] ; then
                echo "%{F$BLUE}%{F-}"
            elif [ $batt_level -le 10 ] ; then
                echo "%{F$RED}%{F-}"
            elif [ $batt_level -lt 50 ] ; then
                echo "%{F$BLUE}%{F-}"
            elif [ $batt_level -le 100 ] ; then
                echo "%{F$BLUE}%{F-}"
            fi
        fi
    }

    clock() {
        date=$(/usr/sbin/clock -f "%a, %b %d")
        time=$(/usr/sbin/clock -f "%l:%M %p")
        echo "%{F$BLUE}$date%{F-} $time"
    }

    vol() {
        vol=$(volume | awk -F' ' '{print $1}')
        vol_level=$(volume | awk -F' ' '{print $2}')
        if "$TOGGLE" ; then
            if [ $vol == 'off' ] ; then
                vol="%{F$RED} Mute%{F-}"
            elif [ $vol_level -lt 50 ] ; then
                vol="%{F$BLUE} $vol_level%%%{F-}"
            else
                vol="%{F$BLUE} $vol_level%%%{F-}"
            fi
        else
            if [ $vol == 'off' ] ; then
                vol="%{F$RED}%{F-}"
            elif [ $vol_level -lt 50 ] ; then
                vol="%{F$BLUE}%{F-}"
            else
                vol="%{F$BLUE}%{F-}"
            fi
        fi
        echo $vol
    }

    networks() {
        LAN_STATE=`cat /sys/class/net/enp0s25/operstate`
        WIFI_STATE=`cat /sys/class/net/wlp3s0/operstate`

        if "$TOGGLE" ; then
            if [ "$LAN_STATE" = "up" ]
            then
                text="%{F$BLUE} LAN%{F-}"
            elif [ "$WIFI_STATE" = "up" ]
            then
                text="%{F$BLUE} `essid -w wlp3s0`%{F-}"
            else
                text="%{F$RED} Off%{F-}"
            fi
        else
            if [ "$LAN_STATE" = "up" ]
            then
                text="%{F$BLUE}%{F-}"
            elif [ "$WIFI_STATE" = "up" ]
            then
                text="%{F$BLUE}%{F-}"
            else
                text="%{F$RED}%{F-}"
            fi
        fi

        network="$text"
        echo $network
    }

    desktops() {
        desktop="`bspc control --get-status`"
        # bspwm state
        wm_info=""
        IFS=':'
        set -- ${desktop#?}
        while [ $# -gt 0 ] ; do
            item=$1
            case $item in
                M*)
                    # active monitor
                    #if [ $monitors -gt 1 ] ; then
                    #    wm_info="$wm_info %{F$RED}%{F-}  "
                    #fi
                    ;;
                m*)
                    # inactive monitor
                    #if [ $monitors -gt 1 ] ; then
                    #    wm_info="$wm_info %{F$GREY}%{F-}  "
                    #fi
                    ;;
                O*)
                    # focused occupied desktop
                    wm_info="${wm_info} %{U$BLUE}%{+u}%{-u}"
                    ;;
                F*)
                    # focused free desktop
                    wm_info="${wm_info} %{U$BLUE}%{+u}%{-u}"
                    ;;
                U*)
                    # focused urgent desktop
                    wm_info="${wm_info} %{U$RED}%{+u}%{-u}"
                    ;;
                o*)
                    # occupied desktop
                    wm_info="${wm_info} %{U$WHITE}%{+u}  %{-u}"
                    ;;
                f*)
                    # free desktop
                    wm_info="${wm_info} %{U$GREY}%{+u}  %{-u}"
                    ;;
                u*)
                    # urgent desktop
                    wm_info="${wm_info} %{U$RED}%{+u}  %{-u}"
                    ;;
                L*)
                    # layout
                    ;;
            esac
            shift
        done
        printf "%s\n" "${wm_info}"
    }

    echo " %{F$BLUE}%{A3:shutdown -h now:}%{A3}%{F-}$(desktops) %{r}%{A:toggle_panel:}$TOGGLE_ICON%{A} $(networks) $(vol) $(batt) | $(clock) "
}

while true
do
    echo "$(statusbar)"
    sleep 0.5
done | lemonbar -g x15 -f "$FONT1" -f "$FONT2" -B "$BAR_BG" -F "$BAR_FG" -p | sh &
